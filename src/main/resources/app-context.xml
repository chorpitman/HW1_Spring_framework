<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.epam"/>
    <context:property-placeholder location="classpath:db.properties"/>

    <!--DATA SOURCE MYSQL-->
    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
    <!--<property name="driverClassName" value="${db.driver}"/>-->
    <!--<property name="url" value="${db.url}"/>-->
    <!--<property name="username" value="${db.user}"/>-->
    <!--<property name="password" value="${db.password}"/>-->
    <!--</bean>-->

    <!--DATA SOURCE H2 IN MEMORY-->
    <bean id="dbInMemory" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--JDBC Template-->
    <bean id="nameJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <!--<constructor-arg ref="dataSource"/>-->
        <constructor-arg ref="dbInMemory"/>
    </bean>

    <!--Transaction-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg ref="dbInMemory"/>
    </bean>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <constructor-arg ref="txManager"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" isolation="DEFAULT" propagation="REQUIRED" read-only="true" rollback-for="Exception"
                       timeout="-1"/>
            <tx:method name="recharge*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"
                       rollback-for="Exception" timeout="-1"/>
            <tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"
                       rollback-for="Exception" timeout="-1"/>
            <tx:method name="book*" isolation="DEFAULT" propagation="REQUIRED" read-only="true" rollback-for="Exception"
                       timeout="-1"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="txOperationWithBookTicket" expression="execution(* com.epam.service.TicketService.*(..))"/>
        <aop:pointcut id="txOperationWithUserAccount"
                      expression="execution(* com.epam.service.UserAccountService.*(..))"/>

        <aop:advisor advice-ref="txAdvice" pointcut-ref="txOperationWithBookTicket"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txOperationWithUserAccount"/>
    </aop:config>

    <!--<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">-->
    <!--<property name="locations">-->
    <!--<list>-->
    <!--<value>classpath:db.properties</value>-->
    <!--<value>classpath:db_test.properties</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="ignoreResourceNotFound" value="false"/>-->
    <!--</bean>-->

    <!--INIT DB IN MEMORY -->
    <jdbc:initialize-database data-source="dbInMemory">
        <jdbc:script location="classpath:sql/ddl_in_memory.sql"/>
    </jdbc:initialize-database>

    <!--INIT DB LOCAL -->
    <!--<jdbc:initialize-database data-source="dataSource">-->
    <!--<jdbc:script location="classpath:sql/ddl.sql"/>-->
    <!--<jdbc:script location="classpath:sql/dml.sql"/>-->
    <!--</jdbc:initialize-database>-->

    <!-- DAO -->
    <bean id="userDao" class="com.epam.dao.impl.UserDaoImpl">
        <property name="jdbcTemplate" ref="nameJdbcTemplate"/>
    </bean>
    <bean id="eventDao" class="com.epam.dao.impl.EventDaoImpl">
        <property name="jdbcTemplate" ref="nameJdbcTemplate"/>
    </bean>
    <bean id="ticketDao" class="com.epam.dao.impl.TicketDaoImpl" autowire="byType">
        <!--<property name="jdbcTemplate" ref="nameJdbcTemplate"/>-->
    </bean>
    <bean id="accountDao" class="com.epam.dao.impl.UserAccountDaoImpl" autowire="byType">
        <!--<property name="jdbcTemplate" ref="nameJdbcTemplate"/>-->
    </bean>

    <!-- SERVICES: setter injection -->
    <bean id="userService" class="com.epam.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="userAccountDao" ref="accountDao"/>
    </bean>
    <bean id="eventService" class="com.epam.service.impl.EventServiceImpl">
        <property name="eventDao" ref="eventDao"/>
    </bean>
    <bean id="ticketService" class="com.epam.service.impl.TicketServiceImpl">
        <property name="ticketDao" ref="ticketDao"/>
        <property name="userAccountDao" ref="accountDao"/>
        <property name="eventDao" ref="eventDao"/>
    </bean>
    <bean id="userAccountService" class="com.epam.service.impl.UserAccountServiceImpl">
        <property name="userAccountDao" ref="accountDao"/>
    </bean>

    <!-- FACADES: constructor way injection-->
    <bean id="bookingFacade" class="com.epam.facade.impl.BookingFacadeImpl">
        <constructor-arg ref="userService"/>
        <constructor-arg ref="eventService"/>
        <constructor-arg ref="ticketService"/>
        <constructor-arg ref="userAccountService"/>
    </bean>
</beans>